<?xml version="1.0" encoding="utf-8" ?>
<TemplateInfo>
	<TemplateName>Generate PartialController</TemplateName>
	<ParamName>pcon</ParamName>
	<ProjectName>HttpApi</ProjectName>
	<Path>Controllers\|||NamePlural|||\</Path>
	<FileName>|||Name|||PartialController.cs</FileName>
	<Content>using DevExtreme.AspNet.Data.ResponseModel;
using DMSpro.OMS.Shared.Domain.Devextreme;
using Microsoft.AspNetCore.Mvc;
using System.Threading.Tasks;
using Volo.Abp;
using System;
using Volo.Abp.Content;

namespace |||ControllerNameSpace|||
{
	public partial class |||Name|||Controller
	{
		[HttpGet]
		[Route("GetListDevextremes")]
		public Task&lt;LoadResult&gt; GetListDevextremesAsync(DataLoadOptionDevextreme inputDev)
		{
			return _|||NamePluralLowerCase|||AppService.GetListDevextremesAsync(inputDev);
		}

		[HttpPost]
		[Route("update-from-excel")]
		public async Task&lt;int&gt; UpdateFromExcelAsync(IRemoteStreamContent file)
		{
			try
            {
                return await _|||NamePluralLowerCase|||AppService.UpdateFromExcelAsync(file);
            }
            catch (BusinessException bex)
            {
                throw new UserFriendlyException(message: bex.Message, code: bex.Code, details: bex.Details);
            }
            catch (Exception e)
            {
                throw new UserFriendlyException(message: e.Message);
            }
		}

		[HttpPost]
		[Route("insert-from-excel")]
		public async Task&lt;int&gt; InsertFromExcelAsync(IRemoteStreamContent file)
        {
            try
            {
                return await _|||NamePluralLowerCase|||AppService.InsertFromExcelAsync(file);
            }
            catch (BusinessException bex)
            {
                throw new UserFriendlyException(message: bex.Message, code: bex.Code, details: bex.Details);
            }
            catch (Exception e)
            {
                throw new UserFriendlyException(message: e.Message);
            }
        }
		
		[HttpGet]
        [Route("get-excel-template")]
        public virtual async Task&lt;IRemoteStreamContent&gt; GenerateExcelTemplatesAsync()
        {
            try
            {
                return await _|||NamePluralLowerCase|||AppService.GenerateExcelTemplatesAsync();
            }
            catch (BusinessException bex)
            {
                throw new UserFriendlyException(message: bex.Message, code: bex.Code, details: bex.Details);
            }
            catch (Exception e)
            {
                throw new UserFriendlyException(message: e.Message);
            }
        }
	}
}</Content>
</TemplateInfo>
