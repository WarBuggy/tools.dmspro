<?xml version="1.0" encoding="utf-8" ?>
<TemplateInfo>
	<TemplateName>Generate PartialAppService</TemplateName>
	<ParamName>pas</ParamName>
	<ProjectName>Application</ProjectName>
	<Path>|||NamePlural|||\</Path>
	<FileName>|||NamePlural|||PartialAppService.cs</FileName>
	<Content>using System.Linq;
using System.Collections.Generic;
using System.Threading.Tasks;
using DevExtreme.AspNet.Data;
using DevExtreme.AspNet.Data.ResponseModel;
using DMSpro.OMS.Shared.Lib.Parser;
using DMSpro.OMS.Shared.Domain.Devextreme;
using Microsoft.AspNetCore.Http;
using Volo.Abp;
using System.IO;
using System;

namespace |||NameSpace|||
{
	public partial class |||NamePlural|||AppService
	{
		public virtual async Task&lt;LoadResult&gt; GetListDevextremesAsync(DataLoadOptionDevextreme inputDev)
		{
			var items = await _|||NameLowerCase|||Repository.GetQueryableAsync();
			var base_dataloadoption = new DataSourceLoadOptionsBase();
			DataLoadParser.Parse(base_dataloadoption,inputDev);
			LoadResult results = DataSourceLoader.Load(items, base_dataloadoption);
			results.data = ObjectMapper.Map&lt;IEnumerable&lt;|||Name|||&gt;, IEnumerable&lt;|||Name|||Dto&gt;&gt;(results.data.Cast&lt;|||Name|||&gt;());
			return results;
		}

		public virtual Task&lt;int&gt; UpdateFromExcelAsync(IFormFile file)
		{
			return null;
		}

		public virtual async Task&lt;int&gt; InsertFromExcelAsync(IFormFile file)
		{
			if (file == null || file.Length &lt;= 0) 
			{
				throw new BusinessException(message: L["Error:EmptyFormFile"], code: "0");
			}
			if (!Path.GetExtension(file.FileName).Equals(".xlsx", StringComparison.OrdinalIgnoreCase))
			{
				throw new BusinessException(message: L["Error:ImportFileNotSupported"], code: "0");
			}
			// DUMMY LINE OF CODE TO REMOVE ASYNC AWAIT WARNING
			await _|||NameLowerCase|||Repository.GetQueryableAsync(); // to be remove

			return 0;
		}
	}
}</Content>
</TemplateInfo>
